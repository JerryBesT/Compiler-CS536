int x;
bool x;
int ab;
void ab;
struct Badger{
    void oops;
    int a;
    int xyz;
    bool a;
    void a;
};

struct Madison{
    struct Badger badg;
    struct Basket bask;
};

int wisconsin(int a, void b) {
    struct Badger badger01;
    void aa;
    int x;
    int y;
    go = badgers;
    aa = false;
    (badger01(Badger)).a(int) = a(int);
    (badger01(Badger)).oops = oops;
    ((tree).branch).zzzz = 5;
    if ((badgersWin == 2015)) {
        int champion;
        void championship;
        x(int) = (2015 * Nooooo);
        while (xyzzz) {
            y(int) = (x(int)).b;
            y(int) = (x(int) == (badger01(Badger)).bask);
        }
    }
    else {
        welcome = 2016;
    }
    welcomeSpring = false;
}

int hiCompiler() {
    int xdsdsdsds;
}

int hiCompiler(int var1) {
    struct goodMorning var1;
    bool var1;
    struct goodMorning no;
}

int main(int hi, int nice, bool hi) {
    int haha;
    int hi;
    struct Badger badger01;
    struct Madison madison01;
    struct america us;
    (x(int)).why = 2016;
    (someone).y = 5;
    (badger01(Badger)).a(int) = 2015;
    (badger01(Badger)).zzzzzzz = "Wrong";
    ((badger01(Badger)).zzzzzzz).zzzzzzz = "Also Wrong";
    (((badger01(Badger)).a(int)).a).a = 2017;
    sssssssss = 5;
    n = 50;
    while (true) {
        struct Badger badger02;
        struct Basket badger02;
        int badger02;
    }
    (((badger01(Badger)).a(int)).a).a--;
    (((badger01(Badger)).aaaaaa).aaaaab).aaaaaabbb = 2016;
    (((a).ab).abc).abcd = 2016;
    haha(int) = (whoareyou).a;
    (tree).abababa = (tree).badger02;
    (tree).branch++;
}

